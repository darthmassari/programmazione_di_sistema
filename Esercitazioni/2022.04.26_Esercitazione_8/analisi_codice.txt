Esercizio L1.1

int main (void) {
	int x = 8, y = -3, z = 3.5, w;
	float f = 2.25;
	z = (x + z) % (w = f + 2);
	w = (x + 1) * 10 / (x - z) + (x == 10 - y);
	w = ++x *10 / (y - z) + (x == 10 - y);
	w = ++x *10 / (y - z) , (x = 10 - y);
	return 0;
}

Analisi statica
	Non ha constraint violations

Analisi dinamica
	-	Riga 4: x assume 8, y assume -3, z assume 3, w valore non definito

	-	Riga 5: f assume 2.25

	-	Riga 6: ci sono 2 side-effect: tutto well defined perchè i
		side effect sono su 2 variabili diverse: w assume 4, z assume 3

	-	Riga 7: well-defined, w assume 18 + 0 = 18

	-	Riga 8: undefined behavior perchè x ha un side effect che 
		non è vincolato ad essere eseguito interamente prima
		o dopo un diverso uso di x
		
	-	Riga 9: ci sono 3 side effect di cui 2 su x, però l'operatore
		di concatenazione impone che il side-effect a sinistra
		termini prima che inizi il side-effect a destra quindi è
		well defined; x assume 9, si calcola 90 / -6 ma questo
		valore viene ignorato; x assume 13, w assume 13 