Esercizio B (3 punti)
Facendo riferimento ai numeri di riga (che non fanno parte del codice sorgente),si descriva cosa accade
traducendo ed eseguendo il programma seguente con una abstract machine C99. In particolare si descriva
quali valori vengono assunti dalle variabili durante l'esecuzione del programma. Potrebbe accadere che il
programma contenga degli errori. Per ogni violazione di regola sintattica o constraint presente nel
programma,si scriva qual'è la regola violata e poi si rimuova l'istruzione o la dichiarazione che la
contiene e si continui a tradurre ed eseguire il programma (come se l'istruzione o dichiarazione rimossa non
fosse mai esistita). Allo stesso modo, per ogni undefined behavior presente nel programma, si scriva qual'è il
motivo del comportamento e poi si rimuova l'istruzione o la dichiarazione che lo contiene e si continui a
tradurre ed eseguire il programma (come se l'istruzione o dichiarazione rimossa non fosse mai esistita). Ogni
volta che,a causa di un unspecified behavior o di un implementation-defined behavior,è possibile che il
programma abbia risultati diversi su implementazioni diverse, si spieghi il motivo.


1. #include <stdio.h>
2. int k = 77, h = 99;
3. int fl( int k ) {
4.     int w = k - 1;
5.     printf("%d %d %d\n", w, k, h );
6.     int h = 4 + ( w += 5 );
7.	   printf("%d %d %d\n", w, k, h );
8.	   f2();
9.     for ( int i = 0; i < k; i++ ) {
10.        static int k = 3;
11.        int h = 7;
12.        printf("%d %d %d\n", w, k, h);
13.        w *= 2; k *= 2; h *= 2;
14.     }
15.     w++, k++, h++;
16.     printf("%d %d %d\n", w, k, h);
17.     return w;
18. }
19. 
20. void f2( void ) {
21.     k++;
22.     printf("%d\n", k);
23. }
24. 
25. int main( void ) {
26.     int t = 2, k = 4;
27. 
28.     fl( --k );
29.     f2();
30.     t = f1( t );
31.     t = f2();
32.     return 0;
33. } 


Analisi statica
	Riga 8: Constraint violation, la procedura f1 non "conosce" la procedura f2
	Riga 31: Impossibile assegnare ad un intero un void

Analisi dinamica
	Riga 2: k = 77, h = 99
	Riga 26: t = 2, k = 4;
	Riga 28: Invocazione di f1 con parametro k = 3

	Riga 4: w = 2
	Riga 5: Stampa "2 3 99"
	Riga 6: w = 7, h (locale) = 11
	Riga 7: Stampa "7 3 11"
	Riga 9: i = 0, ciclo for ( 3 volte )
	Riga 10: k = 3
	Riga 11: h (locale) = 7
	Riga 12: Stampa "7 3 7"
	Riga 13: w = 14, k = 6, h = 14
	Riga 12: Stampa "14 6 7"
	Riga 13: w = 28, k = 12, h = 14
	Riga 12: Stampa "28 12 7"
	Riga 13: w = 56, k = 24, h = 14

	Riga 15: w = 57, k = 4, h = 12
	Riga 16: Stampa "57 4 12"
	Riga 17: Ritorna 57

	Riga 29: Incocazione di f2

	Riga 21: k = 78
	Riga 22: Stampa "78"

	Riga 32: Ritorna 0