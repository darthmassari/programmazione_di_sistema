Esercizio E (8 punti)
Si scriva, in C99, MIPS32-MARS e MC68000, un programma con le seguenti caratteristiche:
  . definisce un tipo aggregato T formato dai seguenti membri (disposti nell'ordine che si
    preferisce, per facilitare la traduzione in ASM):
    - 5 membri di un tipo in grado di memorizzare interi nell'intervallo [-32768, 32767], di
      nome s1, s2, s3, s4, s5
    - 2 membri di un tipo in grado di memorizzare interi nell'intervallo [-128, 127], di nome
      c1, c2
    - 1 membro di un tipo in grado di memorizzare interi nell'intervallo [-2^31, 2^31-1], di
      nome m
  . definisce un array a di lunghezza 12 di elementi di tipo T (indici numerati a partire da 0)
  . definisce un array b di lunghezza 12 di elementi di un tipo in grado di memorizzare interi
    nell'intervallo [-128, 127] (gli indici sono numerati a partire da 0)
  . esegue un ciclo in cui chiede all'utente di inserire i dati da memorizzare in a
  . per ciascun indice j valido per a, ripete
    - h assume il valore del membro c2 di a[ j ]
    - se h Ã¨ un indice valido per a, allora
      - conta quanti dei membri s1, s2, s3, s4, s5 di a[ h ] sono maggiori del membro
        m di a[ j ]
      - b[ j ] assume il risultato del conteggio fatto al passo precedente
    - altrimenti b[ j ] assume -1
  . stampa, uno alla volta, gli elementi di b

Per la versione C99, usare
  - il tipo signed char per rappresentare interi nell'intervallo [-128, 127]
  - il tipo short per memorizzare interi nell'intervallo [-32768, 32767]
  - il tipo long per memorizzare interi nell'intervallo [-2^31, 2^31-1]
Per la versione MIPS32-MARS, usare
  - byte per il tipo in grado di memorizzare interi nell'intervallo [-128, 127]
  - half per il tipo in grado di memorizzare interi nell'intervallo [-32768, 32767]
  - word per il tipo in grado di memorizzare interi nell'intervallo [-2^31, 2^31-1]
Per la versione MC68000-ASM1, usare
  - byte per il tipo in grado di memorizzare interi nell'intervallo [-128, 127]
  - word per il tipo in grado di memorizzare interi nell'intervallo [-32768, 32767]
  - long per il tipo in grado di memorizzare interi nell'intervallo [-2^31, 2^31-1]

Nel rappresentare il tipo aggregato T, si presti attenzione ai vincoli di allineamento: per evitare
problemi si consiglia di scegliere in modo opportuno l'ordine dei membri all'interno dell'area di
memoria che rappresenta un valore di T.
Nelle versioni ASM, per effettuare input/output, usare delle parole magiche, ovvero delle
parole di memoria speciali, accedendo alle quali l'hardware effettua operazioni input/output. In particolare:
  - l'input di un byte avviene leggendo il contenuto della parola di 8 bit che ha indirizzo
     0x6000
  - l'output di un byte avviene scrivendo il carattere nella parola di 8 bit che ha indirizzo
     0x6001
  - l'input di un valore di 16 cifre binarie avviene leggendo il contenuto della parola di 16 bit che
     ha indirizzo 0x7000
  - l'output di un valore di 16 cifre binarie avviene scrivendolo nella parola di 16 bit che ha
     indirizzo 0x7002
  - l'input di un valore di 32 cifre binarie avviene leggendo il contenuto della parola di 32 bit che
     ha indirizzo 0x8000
  - l'output di un valore di 32 cifre binarie avviene scrivendolo nella parola di 32 bit che ha
    indirizzo 0x8004