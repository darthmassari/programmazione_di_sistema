Esercizio D (6 punti)
Facendo riferimento ai numeri di riga (che non fanno parte del codice sorgente),si descriva cosa accade
traducendo ed eseguendo il programma seguente con una abstract machine C99. In particolare si descriva
quali valori vengono assunti dalle variabili durante l'esecuzione del programma. Potrebbe accadere che il
programma contenga degli errori. Per ogni violazione di regola sintattica o constraint presente nel
programma, si scriva qual'è la regola violata e poi si rimuova l'istruzione o la dichiarazione che la
contiene e si continui a tradurre ed eseguire il programma (come se l'istruzione o dichiarazione rimossa non
fosse mai esistita). Allo stesso modo, per ogni undefined behavior presente nel programma, si scriva qual'è il
motivo del comportamento e poi si rimuova l'istruzione o la dichiarazione che lo contiene e si continui a
tradurre ed eseguire il programma (come se l'istruzione o dichiarazione rimossa non fosse mai esistita). Ogni
volta che,a causa di un unspecified behavior o di un implementation-defined behavior,è possibile che il
programma abbia risultati diversi su implementazioni diverse, si spieghi il motivo.


1. int x = 8, y = -3, *p1, z = 6.5, w;
2. float f = 2.65, *p2, g[4] = { .35, [2] = -3.5, 4.3 };
3. void *p3 = &y;
4.
5. int main(void) {
6.
7.      z = ( x + z ) % ( w = f + 2 );
8.      p1 = &z;
9.
10.     w = ( ++x + 4 ) / z + ( x == 10 - y );
11.     x = y > 4 || *p1 + 5;
12.     *p1 = -1;
13.     w = ( x++ *7 , x == 10 - y );
14.     w = 2, y = -1;
15.     x = w >= y || ++z;
16.     pl = p3;
17.     w = y = 5;
18.     x = w > y || ++z;
19.     p2 = pl;
20.     w = -2, y = -1;
21.     p2 = g + 1;
22.     x = w >= y || z += 2;
23.     f += p2[ 1 ] + p2[ -1 ];
24.     return 0;
25. }


Analisi statica
	Riga 19: Puntatore a float non può puntare a variabile puntatore a int

Analisi dinamica
	Riga 1: x = 8, y = -3, *p1, z = 6, w = 0
	Riga 2: f = 2.65, *p2, g[4] = { 0.35, 0.0, -3.5, 4.3 }
	Riga 3: *p3 = &y

	Riga 7: w = 4, z = 14
	Riga 8: p1 punta a z
	Riga 10: Le due operazioni che manipolano x non sono vincolate ad essere eseguite una prima dell'altra
	Riga 11: x = 1
	Riga 12: *p1 = -1 -> z = -1
	Riga 13: x = 2, w = 0
	Riga 14: w = 2, y = -1
	Riga 15: x = 1
	Riga 16: p1 punta all'indirizzo di p3
	Riga 17: y = 5, w = 5
	Riga 18: x = 0, z = 0

	Riga 20: w = -2, y = -1
	Riga 21: p2 punta a g[1]
	Riga 22: x = 1, z = 2
	Riga 23: f = -0.5
	Riga 24: Ritorna 0